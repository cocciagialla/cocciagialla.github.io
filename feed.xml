<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title><![CDATA[Sculpin Blog Skeleton]]></title>
    <link href="/feed.xml" rel="self"/>
    <link href="/"/>
    <updated>2017-02-19T10:48:59+01:00</updated>
    <id>/</id>
        <generator uri="http://sculpin.io/">Sculpin</generator>
            <entry>
            <title type="html"><![CDATA[Bring Back The Shutdown Dialog]]></title>
            <link href="/blog/2014/08/13/shutdown-dialog"/>
            <updated>2014-08-13T00:00:00+02:00</updated>
            <id>/blog/2014/08/13/shutdown-dialog</id>
            <content type="html"><![CDATA[<p>Pressing the Mac power button in OS X Mavericks puts your Mac to sleep. A simple Terminal command can change it to display the shutdown dialog instead.</p>

<p>The Mac power button currently has three behaviours: sleep, shutdown dialog and force shutdown. Pressing the power button for about a second puts your Mac to sleep. Pressing it down for about three seconds brings up the shutdown dialog. If you prefer to disable the power buttonâ€™s sleep mode and have the shutdown dialog appear instead, open a Terminal window and enter the following command:</p>

<pre><code>defaults write com.apple.loginwindow PowerButtonSleepsSystem -bool no
</code></pre>

<p>If you change your mind, you can switch it back with this command:</p>

<pre><code>defaults write com.apple.loginwindow PowerButtonSleepsSystem -bool yes
</code></pre>

<p>Remember, you can also bring up the shutdown dialog with the Control-power button shortcut. If you have a Media Eject key, you can use the Control-Media Eject shortcut too.</p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Installing Composer on your Mac]]></title>
            <link href="/blog/2014/08/03/install-composer"/>
            <updated>2014-08-03T00:00:00+02:00</updated>
            <id>/blog/2014/08/03/install-composer</id>
            <content type="html"><![CDATA[<p>This is probably a no brainer as long as you have already installed <a href="http://brew.sh">homebew</a>. If you haven't install homebrew you can find the instructions <a href="/archive/2014/07/21/Homebrew/">here</a>.</p>

<p>Once you have homebrew installed issue the following commands in the terminal noting that Composer is part of the homebrew-php project:</p>

<pre><code>brew update
brew tap homebrew/homebrew-php
brew tap homebrew/dupes
brew tap homebrew/versions
brew install php55-intl
brew install homebrew/php/composer
</code></pre>

<p>That's all folks!!</p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Setting Up Node.js and npm]]></title>
            <link href="/blog/2014/08/02/node-js-and-npm"/>
            <updated>2014-08-02T00:00:00+02:00</updated>
            <id>/blog/2014/08/02/node-js-and-npm</id>
            <content type="html"><![CDATA[<p><a href="http://nodejs.org/">Node.js</a> is gaining a lot of speed and is an exciting new development framework. Here's a quick overview of how to get Node.js working on OSX along with npm, the package manager for node.</p>

<h2 id="install-homebrew">Install Homebrew</h2>

<p><a href="http://brew.sh">Homebrew</a> is the package manager that Apple forgot. Written in Ruby, it allows you to quickly and easily compile software on your Mac. Instructions for installing Homebrew are in the <a href="http://github.com/mxcl/homebrew/blob/master/README.md">README</a> and I have also written a guide <a href="/archive/2014/07/19/Homebrew">here</a>. You will need to install the Developer Tools for Mac which are installed as part of Xcode. Xcode is available for free - it is a pretty hefty download but you will need it and you can get it <a href="https://developer.apple.com/xcode/downloads/">here</a>.</p>

<h2 id="install-node.js-via-homebrew">Install Node.js via homebrew</h2>

<p>Once Homebrew is installed you can go ahead and install Node.js like this:</p>

<pre><code>brew install node
</code></pre>

<p>Easy! Now create a file called <code>server.js</code> and paste in the example server code</p>

<pre><code>var http = require('http');
http.createServer(function (req, res) {
  res.writeHead(200, {'Content-Type': 'text/plain'});
  res.end('Hello World\n');
}).listen(8124, "127.0.0.1");
console.log('Server running at http://127.0.0.1:8124/');
</code></pre>

<p>Save the file and from the console run:</p>

<pre><code>node server.js
</code></pre>

<p>Now you can visit <a href="http://127.0.0.1:8124/">http://127.0.0.1:8124/</a> with your favourite browser and you are up and running with server side JavaScript.</p>

<p>At this point it is probably a good idea to consult the excellent <a href="http://nodejs.org/api">Node.js documentation</a>. This will help you understand what Node.js is and what it can do.</p>

<h2 id="installing-npm">Installing npm</h2>

<p>npm is Node's package manager. It is now installed automatically with Node.js so there is no need to do a separate installation.</p>

<p>If you are developing anything in Node.js there is a good chance there is already a library to help you. It might be a module to connect to MySQL, a templating library or a utility library.</p>

<p>You can search for modules like this:</p>

<pre><code>npm search [searchterm]
</code></pre>

<p>So to search for underscore do this:</p>

<pre><code>npm search underscore
</code></pre>

<p>There is also a <a href="https://npmjs.org/">website for npm</a> where you can search for packages.</p>

<h2 id="installing-modules">Installing modules</h2>

<p>Now we are set up we can install Node modules using npm. <a href="http://expressjs.com/">Express</a> is a good place to start - it is a Node framework inspired by <a href="http://www.sinatrarb.com/">Sinatra</a>.</p>

<pre><code>npm install express
</code></pre>

<p>This provides a solid base to start developing with Node.js including <a href="http://jade-lang.com/">jade</a> the haml inspired Node tempting engine. There is more <a href="http://expressjs.com/guide.html">excellent documentation</a> available for express too.</p>

<p>That's all folks.</p>

<blockquote>
  <p>I love this shit!</p>
</blockquote>

<p>Kirk</p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Applications I Use for Development]]></title>
            <link href="/blog/2014/07/13/apps-i-use"/>
            <updated>2014-07-13T00:00:00+02:00</updated>
            <id>/blog/2014/07/13/apps-i-use</id>
            <content type="html"><![CDATA[<h2 id="dropbox">Dropbox</h2>

<p><a href="http://dropbox.com">Dropbox</a> provides File syncing to the cloud. I put all my documents in Dropbox. It syncs them to all my devices (laptop, mobile, tablet), and serves as a backup as well! <strong>(Free for 2GB)</strong></p>

<h2 id="google-drive">Google Drive</h2>

<p><a href="https://drive.google.com/">Google Drive</a>: File syncing to the cloud too! I use Google Docs a lot to collaborate with others (edit a document with multiple people in real-time!), and sometimes upload other non-Google documents (pictures, etc.), so the app comes in handy for that. <strong>(Free for 5GB)</strong></p>

<h2 id="evernote">Evernote</h2>

<p><a href="https://evernote.com/">Evernote</a>: If I don't write something down, I'll forget it. As a developer, you learn so many new things every day, and technology keeps changing, it would be insane to want to keep it all in your head. So take notes, sync them to the cloud, and have them on all your devices. <strong>(free)</strong></p>

<h2 id="1password">1password</h2>

<p><a href="https://agilebits.com/onepassword">1Password</a>: Allows you to securely store your login and passwords. Even if you only use a few different passwords (they say you shouldn't!), this is really handy to keep track of all the accounts you sign up for! Also, they have a mobile app so you always have all your passwords with you (syncs with Dropbox). A little pricey though. There are free alternatives. <strong>($50 for Mac app, $18 for iOS app)</strong></p>

<h2 id="light-paper">Light Paper</h2>

<p><a href="http://clockworkengine.com/lightpaper-mac/">LightPaper</a>: As a developer, most of the stuff you write ends up being in <a href="http://daringfireball.net/projects/markdown/">Markdown</a>. In fact, this <code>README.md</code> file (possibly the most important file of a GitHub repo) is indeed in Markdown, written in Light Paper or Atom, and I use Light Paper to preview the results everytime I save. <strong>(Free)</strong></p>

<h2 id="atom">Atom</h2>

<p>With the terminal, the text editor is a developer's most important tool. Everyone has their preferences, but unless you're a hardcore <a href="http://en.wikipedia.org/wiki/Vim_(text_editor)">Vim</a> user, a lot of people are going to tell you that <a href="http://atom.io/">Atom</a> is currently the best free full featured one out there.</p>

<p>Go ahead and <a href="https://atom.io/download/mac/">download</a> it. Open the <strong>.zip</strong> file, drag-and-drop in the <strong>Applications</strong> folder, you know the drill now. Launch the application.</p>

<p><strong>Note</strong>: At this point I'm going to create a shorcut on the OS X Dock for Atom . To do so, right-click on the running application and select <strong>Options > Keep in Dock</strong>.</p>
]]></content>
        </entry>
    </feed>